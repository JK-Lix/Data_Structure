链表：

操作函数：
insert(node, index)    将node插入到链表中下标为index的位置  时间复杂度：O(n)
	实现方法：
		1. 找到链表中要插入的位置。
		2. 令待插入结点的 next 指针指向插入位置的当前结点。
		3. 令插入位置之前的当前结点的 next 指针指向待插入结点。

output()	       输出整个链表　　时间复杂度：O(n)
	实现方法：
		1. 定义一个用于遍历的变量，初始指向头结点。
		2. 输出遍历变量所在结点的值，并更新遍历变量为当前结点的下一个结点。
		3. 重复操作 2，直到遍历完所有结点。
		

delete_node(index)     将链表中下标为index的元素删除　　时间复杂度：O(n)
	实现方法：
		1. 从表头遍历找到要删除的位置。
		2. 令删除位置前一个结点的next指针指向待删除位置后一个结点。
		3. 删除结点。

reverse()	　　　　　　　翻转整个链表
	实现方法：
		1. 定义一个用于遍历的指针，初始指向头结点后一个结点。
		2. 让头结点的 next 指针置空。
		3. 从当前遍历指针所指的结点开始遍历链表，将遍历到的结点 next 指针指向头结点。遍历过程中借助另外一个指针保存下一个遍历到的结点。
		4. 重复步骤 3 直至表尾，此时新的链表就是原链表反转后的链表。




循环链表：



