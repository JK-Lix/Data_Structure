数据结构：

１．数据元素的集合
２．数据关系的集合

基本结构：
　　线性结构：数据元素之间存在这一对一的关系（链表、队列、栈等）
　　	　｜－集合结构：数据元素属于统一集合
非线性结构－｜－树形结构：数据元素之间存在着一对多的关系（二叉树、二叉查找树、平衡二叉查找树）
　　　　　　｜_图形结构：数据元素之间存在着多对多的关系

存储方式：
顺序存储结构：表示数据元素在存储器中时连续存储你的，可以用相对位置来表示数据元素之间的逻辑结构
（顺序表、队列、栈等）
链式存储结构：每个数据元素里设置了一个指针用来只想另一个元素的存储地址，以此来表示数据元素之间的逻辑结构。

逻辑结构：



算法：
　　对某一个或者某一类问题的解决方案的描述，根据问题的输入，在有限的计算时间里输出预期的结构。
特征：
　　有穷性：算法必须在执行有限个操作和种植。
　　确切性：算法的每一个操作必须有明确的定义
　　输入项：算法有另个或多个输入，描述算法的初始状态
　　输出项：算法有一个或多个输出，没有输出的算法没有意义
　　可行性:算法的每个计算操作都可以在有限时间内完成




算法与数据结构的关系：
　　数据结构描述了数据元素之间的逻辑关系，算法描述了数据元素的操作步骤，数据结构和算法组成了程序世界。数据结构是程序的基础，算法将数据互相联系，形成了一套能解决具体问题的方案。



算法复杂度：
　　分为算法的时间复杂度和空间复杂度。
时间频度：
　　算法中语句的执行次数用T(n)表示，ｎ为问题的规模T(n) =O(f(n))算法的渐进时间复杂度
O(l)  O(log n)  O(n)  O(n log n)  O(n^2)  O(n^3)  O(2^n)  O(n!)
空间复杂度：
　　算法所占用的存储空间大小S(n),包括指令空间、数据空间、动态申请的内存空间等


内容:
线性结构：顺序表、链表、队列、栈
树结构：二叉树、二叉查找树、二叉平衡树、堆与优先队列、森林与并查集
图结构：图的遍历、图的连通性、最短路和最小生成树
查找算法：哈希表、顺序查找、折半查找、三分查找
排序算法：插入排序、冒泡排序、归并排序、选择排序、快速排序

