2019年04月09日 星期二 18时

				     顺序表

			/************************************
			      用例:     ./vector1.cpp    
			       算法平均时间复杂度 O(n) 
			************************************/

=============================================================================
表内可以存储任意类型的数据。

内容:
1.表最大容量 int size;
2.已用容量   int length;
3.数据	    data_type = xxx;
=============================================================================

c空间申请
  (int*)malloc(sizeof(int));    //申请空间不赋初值     
  calloc申请空间并赋0值
  (int*)relloc(data, sizeof(type) * n);    //重新分配空间       传入的是字节数 
 均为free释放

=============================================================================
空间分配和销毁c与c++严格区分
=============================================================================

c++版本空间申请
	 new()    分配空间 
	 delete() 销毁空间
        new delete配套使用

=============================================================================
操作：

不可并行
  插入操作：找到对应位置，后面的所有元素向后移一位，插入(同时改变Length)
  删除操作：广义删除————即后面元素直接向前移位，覆盖数据（同时改变length)

可并行
  查找操作、遍历操作


=============================================================================
[注]   
	 v->data = (int *)realloc(v->data, sizeof(int) * v->size * 2);   申请
不了空间时，容易返回空值造成内存泄露
	顺序表扩容，自行扩最大，然后自行减半直至可扩容为止，详情见vector1.cpp第28-34行
